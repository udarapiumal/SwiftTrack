server:
  port: 8080

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      routes:
        # CMS Service on port 8081 - SOAP and HTTP support
        - id: cms-soap-route
          uri: http://localhost:8081
          predicates:
            - Path=/services/**,/cms/**
            - Method=POST
          filters:
            - name: PreserveHostHeader
            - name: RemoveRequestHeader
              args:
                name: X-Forwarded-Host
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
            - name: CircuitBreaker
              args:
                name: cmsCircuitBreaker
                fallbackUri: forward:/fallback/cms

        # CMS Service regular HTTP routes
        - id: cms-http-route
          uri: http://localhost:8081
          predicates:
            - Path=/cms/**, /services/**
            - Method=GET
          filters:
            - name: PreserveHostHeader
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
            - name: CircuitBreaker
              args:
                name: cmsCircuitBreaker
                fallbackUri: forward:/fallback/cms

        # Service 2 on port 8082
        - id: service-2-route
          uri: http://localhost:8082
          predicates:
            - Path=/ros/**
          filters:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
            - name: CircuitBreaker
              args:
                name: service2CircuitBreaker
                fallbackUri: forward:/fallback/service2

        # Service 3 on port 8083
        - id: service-3-route
          uri: http://localhost:8083
          predicates:
            - Path=/wms/**
          filters:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
            - name: CircuitBreaker
              args:
                name: service3CircuitBreaker
                fallbackUri: forward:/fallback/service3

# Actuator endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway
  endpoint:
    health:
      show-details: always

# Logging
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG